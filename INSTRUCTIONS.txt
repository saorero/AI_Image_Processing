WORKSPACE3:
I placed the 2016  images in the testing folder. The Images to be used in training and testing  placed in IMAGES
-training contains the files generated after training the model--this was used in exporting the trained model
-inferenceGraph contains the files after exporting the trained model-- this is now the model that was used to conduct image detection
-outputs contain the images that have been passed to the model (lakes have been identified)
- the faster rcnn was used with its own pipeline config that is the pretrained model i modified the config file.
-After modifying it i trained
-I then exported the model
THE COMMANDS USED ARE AS FOLLOWS


TF RECORDS
python generate_tfrecord.py --csv_input=IMAGES/test_labels.csv --image_dir=IMAGES/test --output_path=test.record
python generate_tfrecord.py --csv_input=IMAGES/train_labels.csv --image_dir=IMAGES/train --output_path=train.record
TRAIN
python model_main_tf2.py --model_dir=training --pipeline_config_path=faster_rcnn_resnet50_v1_640x640_coco17_tpu-8\pipeline.config" ---train WORKED PERFECTLY
---Export 
python exporter_main_v2.py --input_type image_tensor --pipeline_config_path .\faster_rcnn_resnet50_v1_640x640_coco17_tpu-8\pipeline.config --trained_checkpoint_dir .\training\ --output_directory .\inferenceGraph THIQ WORKED IN WORKSPACE3 PERFECTLY

TESTING(this is for detecting the lakes in the input images and also calculating the area lake - savingCSV.py) done using the inference graph that was exported
python .\savingCSV.py -m inferenceGraph\saved_model -l .\label_map.pbtxt -i .\test_images\testing\2016Images WORKED PERFECTLY
python .\detect_from_image.py -m inferenceGraph\saved_model -l .\label_map.pbtxt -i .\test_images\testing\2015Images

